"use strict";(self.webpackChunkcln_plugin_tutorial=self.webpackChunkcln_plugin_tutorial||[]).push([[937],{8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var o=t(6540);const i={},s=o.createContext(i);function l(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(s.Provider,{value:n},e.children)}},9106:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"python-tutorial/options","title":"Options","description":"- Command line options passthrough allows plugins to register their own command line options that are exposed through lightningd so that only the main process needs to be configured.","source":"@site/docs/python-tutorial/options.md","sourceDirName":"python-tutorial","slug":"/python-tutorial/options","permalink":"/cln-plugin-tutorial/python-tutorial/options","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Options","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"RPC Methods","permalink":"/cln-plugin-tutorial/python-tutorial/rpc-methods"},"next":{"title":"Events","permalink":"/cln-plugin-tutorial/python-tutorial/events"}}');var i=t(4848),s=t(8453);const l={title:"Options",sidebar_position:5},r="Plugin Options",a={},p=[];function c(e){const n={code:"code",h1:"h1",header:"header",input:"input",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"plugin-options",children:"Plugin Options"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Command line options passthrough allows plugins to register their own command line options that are exposed through lightningd so that only the main process needs to be configured."}),"\n",(0,i.jsxs)(n.li,{children:["Options can also be passed from the ",(0,i.jsx)(n.code,{children:"config"})," file."]}),"\n",(0,i.jsxs)(n.li,{children:["Option values are not remembered when a plugin is stopped or killed, but can be passed as parameters to ",(0,i.jsx)(n.code,{children:"plugin start"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h1,{id:"exercise-add-an-option-to-your-plugin",children:"Exercise: Add an option to your plugin"}),"\n",(0,i.jsxs)(n.p,{children:["Add this code to your ",(0,i.jsx)(n.code,{children:"helloworld.py"})," file (hint: make sure you insert this before ",(0,i.jsx)(n.code,{children:"plugin.run()"}),"):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"plugin.add_option('greeting', 'Hello', 'The greeting I should use.')\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Next, edit your ",(0,i.jsx)(n.code,{children:"hello"})," RPC method from the previous step to use your option in that call:"]}),"\n",(0,i.jsx)(n.p,{children:"Change the line that says:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'greeting = "Hello"\n'})}),"\n",(0,i.jsx)(n.p,{children:"To use your option:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"greeting = plugin.get_option('greeting')\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now let's test! Go to the shell and stop your plugin:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"l1-cli plugin stop helloworld.py\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now start your plugin, inserting a value for your new option:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"l1-cli -k plugin subcommand=start plugin=$(pwd)/python-plugin/helloworld.py greeting='A crazy'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now invoke the updated ",(0,i.jsx)(n.code,{children:"hello"})," RPC method:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"l1-cli hello\n"})}),"\n",(0,i.jsx)(n.p,{children:"Try it with various arguments, and see what happens."}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add an option"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test that it works as expected"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);