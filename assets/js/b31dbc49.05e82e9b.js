"use strict";(self.webpackChunkcln_plugin_tutorial=self.webpackChunkcln_plugin_tutorial||[]).push([[409],{888:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"python-tutorial/events","title":"Events","description":"- Also referred to as \\"Event stream subscriptions\\"","source":"@site/docs/python-tutorial/events.md","sourceDirName":"python-tutorial","slug":"/python-tutorial/events","permalink":"/cln-plugin-tutorial/python-tutorial/events","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Events","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Options","permalink":"/cln-plugin-tutorial/python-tutorial/options"},"next":{"title":"Hooks","permalink":"/cln-plugin-tutorial/python-tutorial/hooks"}}');var i=t(4848),o=t(8453);const r={title:"Events",sidebar_position:6},c="Event notifications",l={},d=[];function a(e){const n={a:"a",code:"code",h1:"h1",header:"header",input:"input",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"event-notifications",children:"Event notifications"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Also referred to as "Event stream subscriptions"'}),"\n",(0,i.jsx)(n.li,{children:"Asynchronous events"}),"\n",(0,i.jsx)(n.li,{children:"Allow a plugin to subscribe to event topics such that CLN will send the plugin a push notification whenever events corresponding to such topics occur."}),"\n",(0,i.jsx)(n.li,{children:"For events where it doesn\u2019t matter how many plugins are listening to the event or in what order the event is processed."}),"\n",(0,i.jsxs)(n.li,{children:["Topics include:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"channel_opened"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"connect"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"sendpay_success"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"block_added"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For the full list of topics, see ",(0,i.jsx)(n.a,{href:"https://docs.corelightning.org/docs/event-notifications",children:"the official docs"}),"."]}),"\n",(0,i.jsx)(n.h1,{id:"exercise-add-an-event-stream-subscription-to-your-plugin",children:"Exercise: Add an event stream subscription to your plugin"}),"\n",(0,i.jsxs)(n.p,{children:["Add this code to your ",(0,i.jsx)(n.code,{children:"helloworld.py"})," file (hint: make sure you insert this before ",(0,i.jsx)(n.code,{children:"plugin.run()"}),"):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@plugin.subscribe("connect")\ndef on_connect(plugin, id, address, **kwargs):\n    plugin.log("Received connect event for peer {}".format(id))\n\n\n@plugin.subscribe("disconnect")\ndef on_disconnect(plugin, id, **kwargs):\n    plugin.log("Received disconnect event for peer {}".format(id))\n'})}),"\n",(0,i.jsx)(n.p,{children:"Now let's test! Go to the shell and restart your plugin:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"l1-cli plugin stop helloworld.py && \nl1-cli plugin start $(pwd)/python-plugin/helloworld.py\n"})}),"\n",(0,i.jsx)(n.p,{children:"Grab Node 1\u2019s pubkey and listening address:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"l1-cli getinfo\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now paste the connection info for Node 1 into this ",(0,i.jsx)(n.code,{children:"connect"})," command from Node 2:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"l2-cli connect <Node 1\u2019s pubkey>@<hostname>:<port>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now check Node 1's logs to make sure your callback ran."}),"\n",(0,i.jsxs)(n.p,{children:["Try the same thing with your ",(0,i.jsx)(n.code,{children:"disconnect"})," subscription:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"l2-cli disconnect <Node 1\u2019s pubkey>\n"})}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add an event stream subscription"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test that it works as expected"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);